name: Deploy to Production

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: Build all distribution formats
        run: pnpm run build

      - name: Run quality checks
        run: pnpm run check

      - name: Deploy to Google Apps Script
        run: |
          echo '${{ secrets.CLASP_CREDENTIALS }}' > ~/.clasprc.json
          pnpm run push
        env:
          CLASP_CREDENTIALS: ${{ secrets.CLASP_CREDENTIALS }}

      - name: Publish Types Package to NPM
        run: |
          cd dist/npm-types
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Library Package to NPM
        run: |
          cd dist/npm-lib
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release for version ${{ github.ref }}

            ## Changes
            - Deployed to Google Apps Script
            - Published to NPM as latest version

            ## Installation
            ```bash
            npm install ${{ github.event.repository.name }}
            ```
          draft: false
          prerelease: false