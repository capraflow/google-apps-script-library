name: Deploy to Production

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build all distribution formats
        run: pnpm run build

      - name: Run quality checks
        run: pnpm run check

      - name: Deploy to Google Apps Script
        env:
          CLASP_CREDENTIALS: ${{ secrets.CLASP_CREDENTIALS }}
        run: |
          echo "$CLASP_CREDENTIALS" > ~/.clasprc.json
          pnpm exec clasp push
          VERSION=$(node -p "require('./package.json').version")
          pnpm exec clasp create-deployment --description "v$VERSION - $(date '+%Y-%m-%d %H:%M:%S')"

      - name: Publish Types Package to NPM
        run: |
          cd dist/npm-types
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Library Package to NPM
        run: |
          cd dist/npm-lib
          npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get version for release
        id: get-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git tag "v${{ steps.get-version.outputs.version }}"
          git push origin "v${{ steps.get-version.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.get-version.outputs.version }}"
          release_name: "Release v${{ steps.get-version.outputs.version }}"
          body: |
            Automated release for version ${{ steps.get-version.outputs.version }}

            ## Changes
            - Deployed to Google Apps Script with versioned deployment
            - Published gas-utils-library-types@${{ steps.get-version.outputs.version }} to NPM
            - Published gas-utils-library@${{ steps.get-version.outputs.version }} to NPM

            ## Installation
            ```bash
            # Types package (for use with GAS library)
            npm install gas-utils-library-types

            # Self-contained package (no GAS library needed)
            npm install gas-utils-library
            ```

            ## Latest Commit
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
